<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CompessingRoundButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource InactiveBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            x:Name="outerBorder"
                            CornerRadius="180"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Border.RenderTransform>
                            <RotateTransform x:Name="rotation" Angle="0" 
                                             CenterX="0.5"
                                             CenterY="0.5"/>
                        </Border.RenderTransform>

                        <ContentPresenter Margin="4"
                                          x:Name="content"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseDown" SourceName="outerBorder">
                            <BeginStoryboard>
                                <Storyboard AutoReverse="True">
                                    <ThicknessAnimation Duration="0:0:0.2"
                                                        From="4"
                                                        Storyboard.TargetName="content"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="8"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UnderlinedButton" TargetType="Button" BasedOn="{StaticResource BaseControl}">
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{StaticResource InactiveBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            x:Name="outerBorder"
                            CornerRadius="0"
                            BorderThickness="0,0,0,2"
                            BorderBrush="{TemplateBinding BorderBrush}">

                        <ContentPresenter Margin="4,2,4,2"
                                          x:Name="content"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Margin" Value="2,0,2,0" TargetName="outerBorder"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="outerBorder" Property="BorderThickness" Value="0,0,0,2.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButton" TargetType="Button">
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource InactiveBorderBrush}"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            x:Name="outerBorder"
                            CornerRadius="90"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">

                        <ContentPresenter Margin="2"
                                          x:Name="content"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="outerBorder" Property="BorderThickness" Value="2"/>
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{StaticResource InactiveBorderBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="outerBorder" Property="BorderThickness" Value="2.5"/>
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="LightGray"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ABitRoundButton" TargetType="Button" BasedOn="{StaticResource RoundButton}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource InactiveBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            x:Name="outerBorder"
                            CornerRadius="10"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">

                        <ContentPresenter Margin="2"
                                          x:Name="content"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="BorderBrush" Value="{StaticResource InactiveBorderBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderThickness" Value="2.5"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="LightGray"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SideOptionButton" TargetType="Button" BasedOn="{StaticResource RoundButton}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
    </Style>

</ResourceDictionary>